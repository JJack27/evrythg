Lecture: Z-transform

Automatic Control 1

Z-transform
Prof. Alberto Bemporad
University of Trento

Academic year 2010-2011

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

1 / 21

Lecture: Z-transform

Z-transform

Z-transform
Consider a function f (k), f :

→ , f (k) = 0 for all k < 0

Definition

2

1.8

1.6

1.4

1.2

f(k)

The unilateral Z-transform of f (k) is the function
of the complex variable z ∈ defined by

1

0.8

∞

0.6

f (k)z−k

F(z) =

0.4

0.2

0
−2

k=0

0

2

4

6

8

10

k

Once F(z) is computed using the series, it’s extended
to all z ∈ for which F(z) makes sense

Witold Hurewicz

Z-transforms convert difference equations into
algebraic equations. It can be considered as a
discrete equivalent of the Laplace transform.

(1904-1956)
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

2 / 21

Lecture: Z-transform

Z-transform

Examples of Z-transforms

Discrete impulse
0
1

f (k) = δ(k)

if k = 0
if k = 0

⇒

[δ] = F(z) = 1

Discrete step
f (k) = 1I(k)

0
1

if k < 0
if k ≥ 0

⇒

[1I] = F(z) =

z
z−1

Geometric sequence
f (k) = ak 1I(k) ⇒

Prof. Alberto Bemporad (University of Trento)

[f ] = F(z) =

Automatic Control 1

z
z−a

Academic year 2010-2011

3 / 21

Lecture: Z-transform

Z-transform

Properties of Z-transforms

Linearity
[k1 f1 (k) + k2 f2 (k)] = k1 [f1 (k)] + k2 [f2 (k)]
Example: f (k) = 3δ(k) −

5
2k

1I(t) ⇒

[f ] = 3 −

5z
z− 12

Forward shift1
[f (k + 1) 1I(k)] = z [f ] − zf (0)
Example: f (k) = ak+1 1I(k) ⇒

1

z
[f ] = z z−a
−z=

az
z−a

z is also called forward shift operator

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

4 / 21

Lecture: Z-transform

Z-transform

Properties of Z-transforms

Backward shift or unit delay 2
[f (k − 1) 1I(k)] = z−1 [f ]
Example: f (k) = 1I(k − 1) ⇒

[f ] =

z
z(z−1)

Multiplication by k
[kf (k)] = −z
Example: f (k) = k 1I(k) ⇒

2 −1

z

[f ] =

d
dz

[f ]

z
(z−1)2

is also called backward shift operator

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

5 / 21

Lecture: Z-transform

Z-transform

Initial and final value theorems
Initial value theorem
f (0) = lim F(z)
z→∞

z
z−1

Example: f (k) = 1I(k) − k 1I(k) ⇒ F(z) =
f (0) = limz→∞ F(z) = 1

−

z
(z−1)2

Final value theorem
lim f (k) = lim(z − 1)F(z)

k→+∞

z→1

Example: f (k) = 1I(k) + (−0.7)k 1I(t) ⇒ F(z) =
f (+∞) = limz→1 (z − 1)F(z) = 1
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

z
z−1

+

z
z+0.7

Academic year 2010-2011

6 / 21

Lecture: Z-transform

Transfer functions

Discrete-time transfer function
Let’s apply the Z-transform to discrete-time linear systems
x(k + 1)
y(k)

=
=

Ax(k) + Bu(k)
Cx(k) + Du(k)

x(0) = x0

Define X(z) =

[x(k)], U(z) =

[u(k)], Y(z) =

[y(k)]

Apply linearity and forward shift rules
zX(z) − zx0
Y(z)

Prof. Alberto Bemporad (University of Trento)

=
=

AX(z) + BU(z)
CX(z) + DU(z)

Automatic Control 1

Academic year 2010-2011

7 / 21

Lecture: Z-transform

Transfer functions

Discrete-time transfer function
X(z)
Y(z)

=
=

z(zI − A)−1 x0 + (zI − A)−1 BU(z)
zC(zI − A)−1 x0 + (C(zI − A)−1 B + D)U(z)
Z-transform

Z-transform

of natural response

of forced response

Definition:
The transfer function of a discrete-time linear system (A, B, C, D) is the ratio
G(z) = C(zI − A)−1 B + D
between the Z-transform Y(z) of the output and the Z-transform U(z) of the input
signals for the initial state x0 = 0
MATLAB

»sys=ss(A,B,C,D,Ts);
»G=tf(sys)
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

8 / 21

Lecture: Z-transform

Transfer functions

Discrete-time transfer function
u(k)

A; B; C; D

y(k)

U (z)

Y (z)

G(z)

x0 = 0

Example: The linear system

 x(k + 1)

y(k)

=

0.5
0

=

1

1
−0.5
−1

x(k) +

0
1

u(k)

x(k)

with sampling time Ts = 0.1 s has the transfer function
−z + 1.5
MATLAB
G(z) = 2
»sys=ss([0.5 1;
0 -0.5],[0;1],[1
z − 0.25

-1],0,0.1);

»G=tf(sys)

Note: Even for discrete-time systems, the
transfer function does not depend on the input
u(k). It’s only a property of the linear system
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Transfer function:
-z + 1.5
---------sˆ2 - 0.25

Academic year 2010-2011

9 / 21

Lecture: Z-transform

Difference equation

Difference equations

Consider the nth -order difference equation forced by u
an y(k − n) + an−1 y(k − n + 1) + · · · + a1 y(k − 1) + y(k)
= bn u(k − n) + · · · + b1 u(k − 1)
For zero initial conditions we get the transfer function
G(z)

=
=

Prof. Alberto Bemporad (University of Trento)

bn z−n + bn−1 z−n+1 + · · · + b1 z−1
an z−n + an−1 z−n+1 + · · · + a1 z−1 + 1
b1 zn−1 + · · · + bn−1 z + bn
zn + a1 zn−1 + · · · + an−1 z + an

Automatic Control 1

Academic year 2010-2011

10 / 21

Lecture: Z-transform

Difference equation

Difference equations
Example: 3y(k − 2) + 2y(k − 1) + y(k) = 2u(k − 1)
G(z) =

2z−1
3z−2

+ 2z−1

+1

=

2z
z2

+ 2z + 3

Note: The same transfer function G(z) is obtained from the equivalent matrix
form

0
1
0
 x(k + 1) =
x(k) +
u(k)
−3 −2
1

0 2 x(k)
y(k) =
⇒ G(z) =

Prof. Alberto Bemporad (University of Trento)

0

2

z

1
0

0
1

Automatic Control 1

−

0
−3

1
−2

−1

0
1

Academic year 2010-2011

11 / 21

Lecture: Z-transform

Difference equation

Some common transfer functions

Integrator
x(k + 1)
y(k)

=
=

x(k) + u(k)
x(k)

U (z)

1
z¡1

Y (z)

U (z)

1
z 2 ¡ 2z + 1

Y (z)

Double integrator


 x1 (k + 1)
x (k + 1)
 2
y(k)

=
=
=

x1 (k) + x2 (k)
x2 (k) + u(k)
x1 (k)

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

12 / 21

Lecture: Z-transform

Difference equation

Some common transfer functions
Oscillator

 x1 (k + 1)
x (k + 1)
 2
y(k)

=
=
=

x1 (k) − x2 (k) + u(k)
x1 (k)
1
x (k) + 12 x2 (k)
2 1

U (z)

1
1
2z + 2
z2 ¡ z + 1

Y (z)

output response
2

y(k)

1

0

−1

−2

0

10

20

30

40

50

60

k

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

13 / 21

Lecture: Z-transform

Difference equation

Impulse response

Consider the impulsive input u(k) = δ(k), U(z) = 1. The corresponding
output y(k) is called impulse response
The Z-transform of y(k) is Y(z) = G(z) · 1 = G(z)
Therefore the impulse response coincides with the inverse Z-transform g(k) of
the transfer function G(z)

=

δ(k)

y(k)

=

−1

1
z−1

= 1I(k − 1)

2

2

1

1

y(k)

u(k)

u(k)

Example (integrator:)

0

−1

−2
−2

0

2

4

k

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

0

−1

6

8

10

−2
−2

0

2

4

6

8

10

k

Academic year 2010-2011

14 / 21

Lecture: Z-transform

Difference equation

Poles, eigenvalues, modes
Linear discrete-time system
x(k + 1)
y(k)
x(0) = 0

=
=

Ax(k) + Bu(k)
Cx(k) + Du(k)

G(z) = C(zI − A)−1 B + D

NG (z)
DG (z)

Use the adjugate matrix to represent the inverse of zI − A
C(zI − A)−1 B + D = C

C Adj(zI − A)B
det(zI − A)

+D

The denominator DG (z) = det(zI − A) !
The poles of G(z) coincide with the eigenvalues of A

Well, as in continuous-time, not always ...
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

15 / 21

Lecture: Z-transform

Difference equation

Steady-state solution and DC gain
Let A asymptotically stable (|λi | < 1). Natural response vanishes
asymptotically
Assume constant u(k) ≡ ur , ∀k ∈ . What is the asymptotic value
xr = limk→∞ x(k) ?
Impose xr (k + 1) = xr (k) = Axr + Bur and get xr = (I − A)−1 Bur
The corresponding steady-state output yr = Cxr + Dur is
yr = (C(I − A)−1 B + D) ur
DC gain

Cf. final value theorem:
yr

=
=
=

lim y(k) = lim(z − 1)Y(z)

k→+∞

z→1

lim(z − 1)G(z)U(z) = lim(z − 1)G(z)

z→1

z→1

ur z
z−1

G(1)ur = (C(I − A)−1 B + D)ur

G(1) is called the DC gain of the system
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

16 / 21

Lecture: Z-transform

Difference equation

Example - Student dynamics
Recall student dynamics in 3-years undergraduate course





 x(k + 1)


y(k)

=
=


 
.2
0
0
1


 
0  x(k) +  0  u(k)
 .6 .15
0
.8 .08
0
0 0 .9 x(k)

DC gain:
−1 1
.2 0 0
0
.6 .15 0
0
0 .8 .08
0.432
, G(1) ≈
z3 −0.43z2 +0.058z−0.0024
100
010
001

[ 0 0 .9 ]
Transfer function: G(z) =

−

≈ 0.69
0.69

y(k)
35

MATLAB

30

»A=[b1 0 0; a1 b2 0; 0 a2 b3];
»B=[1;0;0];
»C=[0 0 a3];
»D=[0];
»sys=ss(A,B,C,D,1);
»dcgain(sys)

25
20
15
10

ans =

5

0.6905
0
2006

2008

2010

2012

2014

2016

step k

For u(k) ≡ 50 students enrolled steadily, y(k) → 0.69 · 50 ≈ 34.5 graduate
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

17 / 21

Lecture: Z-transform

Algebraically equivalent systems

Linear algebra recalls: Change of coordinates
Let {v1 , . . . , vn } be a basis of
The canonical basis of

n

n

(= n linearly independent vectors)
 
 
 
1

0

0

0

0

1

0
1
.
is e1 =  .. , e2 =  .. , . . ., en =  .. 
.
.
0

A vector w ∈ n can be expressed as a linear combination of the basis vectors,
whose coefficients are the coordinates in the corresponding basis
n

n

xi ei =

w=
i=1

zi vi
i=1

The relation between the coordinates x = [x1 . . . xn ] in the canonical basis
and the coordinates z = [z1 . . . zn ] in the new basis is
x = Tz
where T =

v1

...

Prof. Alberto Bemporad (University of Trento)

vn

(= coordinate transformation matrix)
Automatic Control 1

Academic year 2010-2011

18 / 21

Lecture: Z-transform

Algebraically equivalent systems

Algebraically equivalent systems
Consider the linear system
x(k + 1)

=

Ax(k) + Bu(k)

y(k)

=

Cx(k) + Du(k)

x(0) = x0
Let T be invertible and define the change of coordinates x = Tz, z = T −1 x
z(k + 1)
y(k)

=
=

T −1 x(k + 1) = T −1 (Ax(k) + Bu(k)) = T −1 ATz(k) + T −1 Bu(k)
CTz(k) + Du(k)

z0 = T −1 x0
and hence

z(k + 1)
y(k)

=
=

˜
˜
Az(k)
+ Bu(k)
˜
˜
Cz(k) + Du(k)

z(0) = T −1 x0
˜ B,
˜ C,
˜ D)
˜ are called algebraically
The dynamical systems (A, B, C, D) and (A,
equivalent
Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

19 / 21

Lecture: Z-transform

Algebraically equivalent systems

Transfer function of algebraically equivalent systems

˜ B,
˜ C,
˜ D)
˜
Consider two algebraically equivalent systems (A, B, C, D) and (A,
˜ = T −1 AT
A
˜
B = T −1 B

˜ = CT
C
˜ =D
D

˜ B,
˜ C,
˜ D)
˜ have the same transfer functions:
(A, B, C, D) and (A,
˜
G(z)

=
=
=
=
=

˜ − A)
˜ −1 B
˜+D
˜
C(zI
−1
−1
CT(zT IT − T AT)−1 T −1 B + D
CTT −1 (zI − A)TT −1 B + D
C(zI − A)−1 B + D
G(z)

The same result holds for continuous-time linear systems

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

20 / 21

Lecture: Z-transform

Algebraically equivalent systems

English-Italian Vocabulary

Z-transform
forward shift operator
unit delay

trasformata zeta
operatore di anticipo
ritardo unitario

Translation is obvious otherwise.

Prof. Alberto Bemporad (University of Trento)

Automatic Control 1

Academic year 2010-2011

21 / 21

